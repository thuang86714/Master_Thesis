// -*- mode: c++; c-file-style: "k&r"; c-basic-offset: 4 -*-

#ifndef __CLIENTTHREAD_H__
#define __CLIENTTHREAD_H__

#include <string>
#include <vector>
#include <map>
#include <stdint.h>
#include "transaction/common/frontend/txnclient.h"
#include "transaction/apps/tpcc/tpccclient.h"

class ClientThread {
public:
    ClientThread(int total_warehouses, int warehouses_per_partition,
                 int clients_per_warehouse, int client_id,
                 int remote_item_milli_p, dsnet::transaction::TxnClient *txnClient);

    int doOps(int num_ops);

    /*
     * invoke signature generated by javap -s granola.tpcc.Client
     */
    void invoke1(shardnum_t partition_id, const std::string& request, bool ro,
                 std::string *result);
    void invokeN(std::vector<shardnum_t>& partition_ids,
                 std::vector<std::string>& requests, bool ro,
                 std::vector<std::string>& results);

private:
    TPCCClient* client_;
    bool newOrderOnly_;
    dsnet::transaction::TxnClient *txnClient;
};

#endif
